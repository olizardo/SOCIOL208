---
title: "Centrality in Two-Mode Networks"
execute: 
  eval: true
  echo: true
  output: true
  warning: false
  message: false
format: 
   html:
      code-line-numbers: true
---

We have already seen how to calculate the simplest measure of centrality in two-mode networks (degree) in the [basic two-mode statistics](two-mode.qmd) lecture. Here we extend the discussion to the other two of the big three, **closeness** and **betwennness**. As always, we load up the usual *Southern Women* (SW) data:

```{r}
    library(igraph)
    library(networkdata)
    g <- southern_women
    A <- as_biadjacency_matrix(g)
```

## Geodesic Distances

Geodesic distances work a bit different in two-mode networks because of the only between-node-sets edges restriction. 

For instance, the minimum geodesic distance $g_{ii'}$ between two people is two (a person cannot be adjacent to another person), but it is one between a person and a group (if the person is a member of the group). 

In the same way, a group $g$ cannot be at geodesic distance less than three from a person $p*$ who is not a member, because the shortest path is $g-p-g^*-p^*$. 

That is, there has to be some other group $g^*$ shared between a member $p$ of the focal group $g$ and another person $p^*$ for the shortest path between $g$ and the non-member $p^*$ to exist, and that involves three links at minimum: $g-p$, $p-g^*$, and $g^*-p^*$. This means that the links in paths in two-mode networks always alternate between persons and group nodes.

Beyond that geodesic distances work the same way. In `igraph` when we use the `distances` function on a bipartite graph, we get:

```{r}
   D.pg <- distances(g)
   head(D.pg)
   tail(D.pg)
```

Which is a square matrix of dimensions $(M + N) \times (M + N)$; that's $(18 + 14) \times (18 + 14) = 32 \times 32$ in our case. 

We can check in `R`:

```{r}
   dim(D.pg)
```

As we can see in the distance matrix, distances between nodes in the same set are even $g_{ii'|jj'} = \{2, 4, \ldots\}$ but distances in nodes in different sets are odd $g_{ij|ji} = \{1, 3, \ldots\}$. Beyond this hiccup, distances can be interpreted in the same way as one-mode networks.

## Closeness Centrality 

This means that (unnormalized) closeness centrality works the same way as it does in regular networks:

```{r}
   round(closeness(g), 3)
```

Which is just the inverse of the sums of the distances matrix for people and groups counting their geodesic distances to nodes of both sets. 

However, as @borgatti_everett97 note, if we want *normalized* closeness centralities, we can't use the off-the-shelf normalization for one-mode networks in `igraph` ($n-1$) as it will give us non-sense results because now we have two sets of nodes.

Instead, we need to normalize the closeness score for each node set by its theoretical maximum for each node set. 

For people, this is:

$$
N + 2(M - 1)
$$

And for groups/events this same quantity is:

$$
M + 2(N - 1)
$$

The basic idea is that nodes can be at minimum geodesic distance $g = 1$ from nodes of the other set (for people, groups; for groups, people) and at minimum distance $g = 2$ from nodes of their own set, with their own presence eliminated by subtraction [@borgatti_everett97]. 

In our case, we create a normalization vector with these quantities of length $M + N$:

```{r}
   M <- nrow(A)
   N <- ncol(A)
   n.p <- N + 2 * (M - 1)
   n.e <- M + 2 * (N - 1)
   norm.vec <- c(rep(n.p, M), rep(n.e, N))
```

And normalized closeness is:

```{r}
   round(norm.vec/rowSums(D.pg), 3)
```

Which are the same numbers in @borgatti_everett97 [table 1, column 6].

## Betweenness Centrality 

As @borgatti_everett97 also note, the normalizations for betweenness centrality in the two-mode case are a bit more involved. This is because they depend on which node set is larger than the other. 

For the larger node set, which in our case is the people, the normalization is:

$$
2(M-1)(N-1)
$$

For the smaller node set, which in our case is the groups/events, the normalization is:

$$
\frac{1}{2}(N)(N-1)+\frac{1}{2}(M-1)(M-2)+(M-1)(N-1)
$$

Remember that you have to switch this around if you are analyzing a network with more groups than people. 

Creating the relevant vectors:

```{r}
   n.p <- 2*(M-1)*(N-1)
   n.e <- (1/2)*(N*(N-1))+(1/2)*(M-1)*(M-2)+(M-1)*(N-1)
   norm.vec <- c(rep(n.p, M), rep(n.e, N))
```

And normalized betweenness is:

```{r}
   round(betweenness(g)/norm.vec, 4)*100
```

Which are (with some slight differences and rounding errors) the same numbers in @borgatti_everett97 [table 2, column 3].