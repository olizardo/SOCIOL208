## A Degree-Dependent Model of Hubs and Authorities (AKA SALSA)

You may have noticed that the Hubs and Authorities approach is the equivalent of the eigenvector centrality for directed networks. Therefore, it is subject to the same critique that the PageRank centralities levies at the eigenvector centrality, because it assumes that each authority receives the same number of authority points from every hub that points to them irrespective of those hubs' outdegree. In the same way, it assumes that every hub receives the same number of hub points from the authorities they point to irrespective of those authorities' indegree. 

But we can imagine a world in which we want to penalize the number of hub and authority points that everyone gets by each node's in and outdegree. That is, authorities that are pointed to by selective hubs should get more credit than authorities that are pointed to by non-selective hubs. In the same way, hubs that point to authorities that are pointed to by more selective hubs, should be get more hub points for their trouble. 

So the idea is to combine the HITS reflective centrality idea with PageRank's degree-weighting scheme. We can do this by using a variation of the status game we used for HITS, developed by @lempel_moran01.^[They called their approach SALSA an acronym for the also impossible to remember title of "Stochastic Approach for Link Structure Analysis."] Instead of using the original adjacency matrix, we use a couple of degree weighted variations:

$$
\mathbf{P}^a = \mathbf{\underset{\rightarrow}{D}}^{-1}\mathbf{A}
$$

$$
\mathbf{P}^h = \mathbf{\underset{\leftarrow}{D}}^{-1}\mathbf{A}^T
$$

Where $\mathbf{\underset{\rightarrow}{D}}^{-1}$ is a **diagonal matrix** containing the inverse of the *outdegrees* of each node ($1/\sum_ja_{ij}$) along the diagonals and zeros everywhere else (the inverse of the diagonals of $\mathbf{M}$ above) and $\mathbf{\underset{\leftarrow}{D}}^{-1}$ is another diagonal matrix containing the inverse of the *indegrees* of each node ($1/\sum_ia_{ij}$) along the diagonals and zeros everywhere else (the inverse of the diagonals of $\mathbf{N}$ above).

Our new version of the HITS status game is then played using the elements of these matrices:

$$
   x^a_i = \sum_j p^a_{ij}x^h_j
$$

$$  
   x^h_i = \sum_i p^h_{ij}x^a_i
$$

Which says that the authority score of a node is the in-degree weighted hub score of the nodes that point to it (such that lower-in-degree node hub scores contribute more), and the hub score of a node is the out-degree authority score of the nodes that it points to (such that lower-out-degree node authority scores contribute more). 

That means that "pure hubs" (lower in-degree) contribute more to the authority score and "pure authorities" (lower outdegree) also contribute more.

Here's a function that does all that we have said:

```{r}
   status3 <- function(A, e = 0.000001) { 
      n <- nrow(A)
      h <- rep(1, n)  #initializing hub scores
      a <- rep(1, n)  #initializing authority scores
      D.o <- diag(1/rowSums(A)) #outdegree matrix
      D.i <- diag(1/colSums(A)) #indegree  matrix
      P.h <- D.i %*% t(A)
      P.a <- D.o %*% A
      diff <- 1
      k <- 1
      while (diff > e) {
         o.h <- h
         h <- t(P.h) %*% a 
         h <- h/norm(h, type = "E")
         a <- t(P.a) %*% h 
         a <- a/norm(a, type = "E")
         diff <- abs(sum(abs(o.h) - abs(h)))
         k <- k + 1
         }
      return(list(a = as.vector(a), h = as.vector(h), k = k))
      }
```

This function takes the adjacency matrix as input and returns the SALSA versions of the HITS scores as output. 

Let's see it in action:

```{r}
   salsa <- status3(A)
   round(salsa$a/max(salsa$a), 2)
   round(salsa$h/max(salsa$h), 2)
```

Neat! Also, like with HITS, it is clear that these scores are the leading eigenvectors of two matrices $\mathbf{M^*}$ and $\mathbf{N^*}$, themselves given by the reciprocal products of the row and column normalized versions of the adjacency matrix:

$$
\mathbf{M}^* = (\mathbf{\underset{\rightarrow}{D}}^{-1}\mathbf{A})^T(\mathbf{\underset{\leftarrow}{D}}^{-1}\mathbf{A}^T)^T
$$

$$
\mathbf{N}^* = (\mathbf{\underset{\leftarrow}{D}}^{-1}\mathbf{A}^T)^T(\mathbf{\underset{\rightarrow}{D}}^{-1}\mathbf{A})^T
$$

Which, given the above, is the same as:

$$
\mathbf{M}^* = (\mathbf{P}^a)^T(\mathbf{P}^h)^T
$$

$$
\mathbf{N}^* = (\mathbf{P}^h)^T(\mathbf{P}^a)^T
$$

Which we can check as follows:

```{r}
   D.o <- diag(1/rowSums(A)) #outdegree matrix
   D.i <- diag(1/colSums(A)) #indegree  matrix
   P.h <- D.i %*% t(A)
   P.a <- D.o %*% A
   M <- t(P.a) %*% t(P.h)
   N <- t(P.h) %*% t(P.a) 
   a <- Re(eigen(M)$vectors[,1]) *-1
   h <- Re(eigen(N)$vectors[,1]) *-1
   round(a/max(a), 2)
   round(h/max(h), 2)
```

Which are the same numbers we obtained via our reflective status game!