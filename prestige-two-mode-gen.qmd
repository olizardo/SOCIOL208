---
title: "Generalized Prestige Scoring in Two-Mode Networks"
execute: 
  eval: true
  echo: true
  output: true
  warning: false
  message: false
format: 
  html:
    code-line-numbers: true
---

In the lecture note on [Status and Prestige in Two-Mode Netwoks](prestige-two-mode.qmd) we examine various ways of assigning scores to the row and column objects of the biadjacency matrix to derive status scores for the nodes of a two-mode network. 

The dual scoring approach due to @bonacich91 (the dual "Eigenvector Centrality") serves as the standard here, with other approaches (e.g., PageRank-style scoring) serving as deviations and tweaks on the general formula. All can be modeled as the "prismatic" [@podolny01] distribution of status within a system, where nodes in one mode get status from the status of the nodes in each mode and vice versa. 

In formulese, the iterative two-mode network status scoring can formalized as follows. At each iteration $q$, the vector of status scores for the row nodes $\mathbf{s}^R$ and the column nodes $\mathbf{s}^C$ is given by: 

$$
s^R_i(q) = \sum_j\mathbf{A}_{ij}s^C_j(q-1)
$${#eq-iter1}


$$
s^C_j(q) = \sum_i\mathbf{A}_{ij}s^R_i(q-1)
$${#eq-iter2}   


Where $\mathbf{A}$ is the two-mode network's biadjacency matrix, and with the restriction that at the initial step $\mathbf{s}(0)^C = \mathbf{1}$ where $\mathbf{1}$ is the all ones vector of length equals to the number of columns of the biadjacency matrix $\mathbf{A}$. 

At each iteration $q > 0$ we normalize both score vectors:

$$
\mathbf{s}^R(q) = \frac{\mathbf{s}^R(q)}{\left\langle\mathbf{s}^R(q)\right\rangle}
$${#eq-norm1}   

$$
\mathbf{s}^C(q) = \frac{\mathbf{s}^C(q)}{\left\langle\mathbf{s}^C(q)\right\rangle}
$${#eq-norm2} 

Where $\left\langle \mathbf{s} \right\rangle$ is the mean of the vector scores, indicating that we normalize the status score vector so that its expected value equals one (we could use other normalizations like the maximum, sum, or Euclidean norm). 

As [noted before](prestige-two-mode.qmd), one way to generalize the Bonacich scoring is by substituting some other matrix other than $\mathbf{A}$ like the row-stochastic matrix $\mathbf{P}$ into the above equations and let the process run until convergence. 

In a technical paper, @pugliese_etal16 [p. 1909] hint at an alternative way to generalize the usual status scoring in two-mode networks that involves changing the status scores themselves while keeping the standard biadjacency matrix $\mathbf{A}$ in place.

Their basic idea is that at each time step in the iteration we can substitute the following for the current status scores:

$$    
s^R_i(q) = \left(\sum_j\mathbf{A}_{ij}\left[s^C_j(q-1)\right]^{-\delta}\right)^{-\frac{1}{\delta}}
$${#eq-gen1}

$$
    s^C_j(q) = \left(\sum_i\mathbf{A}_{ij}\left[s^R_i(q-1)\right]^{-\gamma}\right)^{-\frac{1}{\gamma}}
$${#eq-gen2}

This generalization works like this: When the parameter $\gamma = 1$ it has the effect of *inverting* the row object's status scores ($s^R_i(q-1)$) that go into the calculation of the column object's status (inside the parentheses), meaning that column objects that connect to *low status* row objects receive *more* status. However, the same parameter outside the parentheses reverses the first inversion, such that column objects receive more status when they connect almost exclusively to high-status row objects and shun the low status ones. 

The $\delta$ parameters work similarly. When $\delta = 1$ the column object's status scores ($s^C_i(q-1)$) that go into the calculation of the focal row object's status are reversed, so that row objects receive *more* status when they connect to *low status* row objects (inside the parentheses). The same parameter (outside the parentheses) reverses this inversion, such that the status of a given row object increases when they connect to high status column objects and shun the low status ones. 

Note that when both parameters $\{\gamma, \delta\} = -1$ the equations above reduce to the usual Bonacich dual scoring. Different parameter value combinations $\{\gamma, \delta\}$ in the $\{+1, -1\}$ range instantiate different ways in which status operates in a given system. 

Why would we want to generalize status scoring in this way? Recall that the basic principle of Bonacich scoring is based on the equation of status and *popularity*/*activity*. In the canonical case of persons and groups [@breiger74], an event receives status from being attended by high-status individuals and an individual receives status from being affiliated with a high status event; in each case, status from the point of view of the event means having highly active members, and from the point of view of the individual it means being affiliated with popular events. 

## Column Object Contamination

But status may not always work this way. Consider the world-economic network linking countries to the products they have a competitive advantage in producing. Analysts noticed that the most developed countries produce both "complex" (i.e., high status) products that only a select few of other highly developed economies produce (like semiconductors) and also less "complex" (i.e., low status, like extractive  natural resources) products that the other less developed economics produce [@tacchella_etal12]. That  means that the "complexity" (i.e., status score) of a product cannot be derived simply taking a summary (e.g., sum or average) of the status score of the countries that produce it, because high status countries engage in both high and low status forms of production. 

In the more general and sociologically apposite case of persons and groups [@breiger74], an equivalent situation would go as follows. Imagine there is a set of elite women and a set of elite events that only the elite women attend. However, elite women are also endowed with a spirit of *noblesse oblige*, which means that the most elite of them *also* attend non-elite events. This means that when determining the status of the *events* it is not very informative to know that elites affiliate with them; rather, we should weigh more heavily whether non-elites affiliate with an event in determining an event's status, such that as the number of non-elite women who affiliate with an event increases, a given event's status is downgraded in a non-linear way. In formal terms, the status of column objects is heavily contaminated by having non-elite row-object affiliates, which we may refer to as a *column object contamination* system. 

Note that the aforementioned dynamics would apply to any status system in which elites are likely to have both elite and non-elite affiliations, and in which elite status is not *necessarily* threatened by having such non-elite affiliations. However, in this system the status of *objects of affiliation* (e.g., groups, events, cultural genres) is negatively and steeply affected by having non-elite affiliates. Such a system approximates the description of the "omnivore" regime that, as argued by cultural sociologists, organizes contemporary cultural consumption choices.   

One approach to modeling this type of elite-omnivorousness status system is to set $\delta = -1$ and $\gamma = 1$ in @eq-gen1 and @eq-gen2 so that a column object's status is the sum of the reciprocal of the inverse of the status of the row objects affiliated with it. This means that a column object's status decreases non-linearly when it is affiliated with low status row objects, and this feeds back into the calculation of each row object's status. 

## Row Object Contamination

Setting $\delta = 1$ and $\gamma = -1$ in @eq-gen1 and @eq-gen2 produce scores consistent with a different status distribution system. This system operates according to the same "status contamination" logic we just described, but it does so asymmetrically in determining the status of the *row objects*, not the column objects in the biadjacency matrix. In formal terms, the status of row objects is heavily contaminated by having non-elite column-object affiliations; accordingly, we may refer to this status accounting process as a *row object contamination* system. 

How would this work? In the case of person and groups, imagine a status system in which the status of persons is fragile, so that *any* affiliation with low status events will drive a person's status downward non-linearly. This then feeds back into the determination of each event's status, such that events likely to be attended by these contaminated individuals themselves rapidly lose status. Note, however, that since we are not transforming the way we calculate status for events, high-status in the case of events reverts to Bonacich-style popularity among high status persons; the highest status events are those who draw a relatively big crowd of high-status people. 

This status system is therefore in many ways the opposite of the elite omnivorousness one. At the level of individuals, this system rewards being picky about which event to attend, but this pickiness is driven by event popularity. This means that rather than being "omnivores," the highest status individuals in this accounting system will be *popularity seeking univores*; that is, people who restrict their attendance only to a select set of highly popular events. For instance, social systems like high-schools or fashion (were status is determined by selecting the most popular objects) may operate in this way.

## Contaminating Dualities

Of course, it is likely that the most empirically accurate model of really existing status systems combines the two logics just described; that is following the principle of duality [@breiger74], the status of persons is contaminated (and thus non-linearly driven downwards) by affiliation with low status objects, and the status of objects is contaminated by affiliation with low status persons. This is what @wood_ashby25 refer to as the principle of "contaminating dualities," which mutually feed into one another in determining the status of both persons and groups. 

Accordingly, to model the contaminating dualities status accounting system, we would have to set *both* $\delta = 1$ and  $\gamma = 1$ in @eq-gen1 and @eq-gen2.

The generalized status scoring model above thus allows us to consider analytically distinct status distribution regimes, which we can summarize as in @tbl-status. 

|$\gamma$|$\delta$|Status Distribution Regime|
|-------|--------|--------|--------|------|
|-1|-1|Symmetric Duality of Status via Activity and Popularity|
|-1|1|Asymmetric Row Low-Status Contamination for Column Objects|
|-1|1|Asymmetric Column Low-Status Contamination for Row Objects|
|1|1|Contaminating Dualities for Row and Column Objects|
: Parameter settings for different status distribution regimes {#tbl-status}

Let's see how this would work with real data. Let's load up the trusty Southern Women (SW) data:


```{r}
   library(networkdata)
   library(igraph)
   g <- southern_women
   A <- as.matrix(as_biadjacency_matrix(g))
```

Here's the SW biadjacency matrix in table form:

```{r}
#| label: tbl-sw
#| tbl-cap: "Southern Women Data Biadjacency Matrix."
#| echo: false
    library(kableExtra)
    A <- A[names(sort(rowSums(A), decreasing = TRUE)), names(sort(colSums(A), decreasing = TRUE))]
    kbl(A, format = "pipe") %>% 
    kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), font_size = 11) |> 
    footnote(symbol = c("Row and Columns Ordered by Degree Centrality."))
```

And here's a function that modifies the status distribution game function to incorporate generalized status scores parameters:

```{r}
   tm.status <- function(w, gamma = -1, delta = -1) {
      y <- matrix(1, ncol(w), 1) #initial group status column vector set to a constant
      z <- t(w)
      epsilon <- 1 
      k <- 0
      while (epsilon > 1e-10) {
         o.y <- y 
         x <- (w %*% (o.y^-delta))^-(1/delta) #generalized status scores for people
         x <- x/norm(x, type = "F") #normalizing new people status scores 
         y <- (z %*% (x^-gamma))^-(1/gamma) #generalized status scores for groups
         y <- y/norm(y, type = "F") #normalizing new group status scores 
         if (k > 1) {
            epsilon <- abs(sum(abs(y) - abs(o.y))) 
            }
         k <- k + 1
         }
   return(list(p.s = x, g.s = y, k = k))
   }
```

We then run the function for the four status distribution regimes:

```{r}
   s1 <- tm.status(A, gamma = -1, delta = -1) #Bonacich Scores
   s2 <- tm.status(A, gamma = 0.5, delta = -1) #column contamination
   s3 <- tm.status(A, gamma = -0.5, delta = 1) #row contamination
   s4 <- tm.status(A, gamma = 0.5, delta = 1) #double contamination
```

Now we check out the different status orderings. For people, this looks like this:

```{r}
#| echo: false
#| label: tbl-people
#| tbl-cap: "Status Scores for Persons"
   s1.col <- data.frame(n = rownames(s1$p.s)[order(s1$p.s/max(s1$p.s), decreasing = TRUE)],
                   s = round(sort(s1$p.s/max(s1$p.s), decreasing = TRUE), 2))
   s2.col <- data.frame(n = rownames(s2$p.s)[order(s2$p.s/max(s2$p.s), decreasing = TRUE)],
                   s = round(sort(s2$p.s/max(s2$p.s), decreasing = TRUE), 2))
   s3.col <- data.frame(n = rownames(s3$p.s)[order(s3$p.s/max(s3$p.s), decreasing = TRUE)],
                   s = round(sort(s3$p.s/max(s3$p.s), decreasing = TRUE), 2))
   s4.col <- data.frame(n = rownames(s4$p.s)[order(s4$p.s/max(s4$p.s), decreasing = TRUE)],
                   s = round(sort(s4$p.s/max(s4$p.s), decreasing = TRUE), 2))
   s.tab <- cbind(s1.col, s2.col, s3.col, s4.col)
   library(kableExtra)
   kbl(s.tab, format = "pipe", 
       align = c("l", "c", "l", "c", "l", "c", "l", "c"),
       col.names = c("Person", "Bonacich", "Person", "Col. Contamination", "Person", "Row Contamination", "Person", "Double Contamination")) %>% 
   kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), font_size = 11) %>%
   footnote(symbol = c("Scores normalized by dividing by the maximum.")) 
```

And for the groups:

```{r}
#| echo: false
#| label: tbl-groups
#| tbl-cap: "Status Scores for Groups"
   s1.col <- data.frame(n = rownames(s1$g.s)[order(s1$g.s/max(s1$g.s), decreasing = TRUE)], s = round(sort(s1$g.s/max(s1$g.s), decreasing = TRUE), 2))
   s2.col <- data.frame(n = rownames(s2$g.s)[order(s2$g.s/max(s2$g.s), decreasing = TRUE)], s = round(sort(s2$g.s/max(s2$g.s), decreasing = TRUE), 2))
   s3.col <- data.frame(n = rownames(s3$g.s)[order(s3$g.s/max(s3$g.s), decreasing = TRUE)], s = round(sort(s3$g.s/max(s3$g.s), decreasing = TRUE), 2))
   s4.col <- data.frame(n = rownames(s4$g.s)[order(s4$g.s/max(s4$g.s), decreasing = TRUE)], s = round(sort(s4$g.s/max(s4$g.s), decreasing = TRUE), 2))
   s.tab <- cbind(s1.col, s2.col, s3.col, s4.col)
   library(kableExtra)
   kbl(s.tab, format = "pipe", 
       align = c("l", "c", "l", "c", "l", "c", "l", "c"),
       col.names = c("Group", "Bonacich", "Group", "Col. Contamination", "Group", "Row Contamination", "Group", "Double Contamination")) %>% 
   kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), font_size = 11) |> 
   footnote(symbol = c("Scores normalized by dividing by the maximum.")) 
```

## Bonacich Rankings
As we can see in the first two columns of @tbl-people and @tbl-groups, the Bonacich Eigenvector ranking is pretty similar to the ranking we obtain using degree. Theresa, Evelyn, Brenda, and Laura are the top women, and events 9/16, 3/15, 4/8, 5/19, and 2/25 are ranked toward the top. 

## Asymmetric Column Contamination Rankings

However, as  the third and fourth columns of @tbl-groups shows, the event ranking obtained in the asymmetric column contamination model is completely different from the usual Eigenvector ranking and in many ways reversed ($r =$ `r round(cor(s1$g.s, s2$g.s), 2)`). Events 3/2, 6/27, 11/21, and 8/3 come toward the top and most of the events ranked highly by the eigenvector score are toward the bottom. The reason for that, is that while events 3/2, 6/27, 11/21, and 8/3 are relatively small events by attendance, they are attended almost exclusively by the highest status women and are avoided by the lower status women. The column contamination model thus uncovers the most elite set of events. 

Because women's status scores are computed in the usual way ($\delta = -1$), they end up being similar to those obtained via the standard Bonacich scoring; elite women attend many elite events and non-elite women just a few non-elite ones. This is shown in the first four columns of @tbl-people. Ranking the women using the column contamination model's event scores serves to *magnify* the Bonacich dual scoring status differences between them, while also partially re-ordering the top of the ranks. The top four women receive very high normalized scores ($\mathbf{s}^R > 0.8$) and the bottom seven meager scores ($\mathbf{s}^R < 0.2$). This ranking reveals Evelyn as the top woman, followed closely by Nora (who was sixth by the Bonacich scoring), Laura, and Sylvia. Note that the reason for Nora's rise in standing according to the column contamination metric is that she attends almost all of the elite events uncovered by the same metric, as we can see in @tbl-sw.

## Asymmetric Row Contamination Rankings

Rows five and six of @tbl-people show how the person ranking would change if instead we computed it using the asymmetric row contamination model. As we can see, the asymmetric row contamination status order of women is almost a complete reversal from that implied by the asymmetric column contamination model ($r =$ `r round(cor(s2$g.s, s3$g.s), 2)`). Here, Dorothy emerges as to the top person, followed somewhat distantly by Olivia, Flora, and Pearl, all undisputed low status women according to the Bonacich and especially the column contamination model's scores. Instead, all of the high status women according to these other two status metrics are lumped in the bottom. 

Checking the event ranking in columns five and six of @tbl-sw, we can see that the reason for this inversion of the status order is that only two events, namely, 4/8 and 9/16 emerge as high status events in the asymmetric row contamination metric, and these, as expected given the earlier discussion, are the top-two most popular events. Dorothy attends both and shuns *every* other event, which puts her at the top. She is a popular event univore, and thus the top dog by this metric. Olivia and Flora have a similar event profile to Dorothy. They attend 4/8 (the second most popular event) and just one other event (2/23). Pearl, the fourth woman ranked by this metric, attends only two events, and two of them are high-status. However, she also attends a relatively low status event (5/19) which degrades her position. Overall, it is easy to see that the asymmetric row contamination status metric  rewards high status selectivity toward popular events and heavily punishes the omnivore strategy. 

## Contaminating Dualities Rankings

As we can see in the last two columns of @tbl-groups, the contaminating dualities model, combining the elite omnivorousness and popular univorousness status dynamics, provides yet another picture of the event status system, which is, in fact, almost an exact reversal of that implied by the usual Bonacich scores ($r =$ `r round(cor(s1$g.s, s4$g.s), 2)`). Events 4/8, 3/15, and 9/16, the top events in the asymmetric row-contaminaton model, are now towards the bottom of the status order, while events 2/23, 11/21, and 8/3 (the lowest status events according to the Eigenvector centrality scoring) are now the highest status events.  As we ca see in @tbl-sw, all of this last set of events are relatively restrictive in terms of attendance (they are on the right side of the table); what they have in common is that they *combine* memberships of the two types of elite women uncovered by the asymmetric row and column-object contamination models; that is, their membership include both high-status membership omnivores like Nora, and popular event exclusivists like Olivia and Flora, the last two of whom emerge as the top status women in the contaminating dualities dynamic, just like they did in the asymmetric row contamination scoring. Nevertheless, even though Flora and Olivia appear toward the top in the row contamination and contaminating dualities models, the two scorings imply very different rankings on the person side ($r =$ `r round(cor(s3$g.s, s4$g.s), 2)`).
