{
  "hash": "9c980349f6a50f484abd80f9778f0a42",
  "result": {
    "markdown": "---\ntitle: \"Analyzing Ego Networks\"\nexecute: \n  eval: true\n  echo: true\n  output: true\n  warning: false\n  message: false\nformat: \n   html:\n      code-line-numbers: true\n---\n\n\n## Ego Networks and Ego Network Data\n\nAn ego-network, is just a **subgraph** of a larger network--referred to as an **ego graph**--that includes a node of interest (\"ego\"), all of the connections between ego and their neighbors (called \"alters\") and usually all of the connections between each of the alters, *excluding* the connections alters may have with other nodes who are not directly tied to ego. \n\n**Ego network data** is social network data collected in such way (e.g., using standard social survey techniques) that you capture the ego networks of some set of people, usually a convenience sample or, more rarely, a probability sample of some population. \n\nNote that if you collect traditional (\"whole\") network data (e.g., all the people in a classroom) you have ego network data for that settings (the ego subgraphs of each node as just defined), but not the reverse; ego-network data cannot be converted into \"whole\" network data, although it can approximate it. \n\nOnce you have ego network data you can analyze each ego graph using the standard techniques we learned so far (if you are only interested in the structural characteristics of the ego graph).\n\nIf you have attributes on each alter, you can alternatively compute measures of **diversity** to or **homophily** to get a sense of how likely ego is to connect to similar or diverse others.\n\n## Structural Measures\n\n### The Clustering Coefficient\n\nPerhaps the most basic structural characteristic of an ego network is the density of the subgraph formed by all of the connections between the alters. This is called ego's **clustering coefficient**.  \n\nLet's see how it works. First we load up the *New Hope* Star Wars social network included in the `networkdata` package [@gabasova16]:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   library(networkdata)\n   g <- starwars[[4]]\n```\n:::\n\n\nThe `starwars` object contain a `list` of igraph network data sets corresponding to seven of the Star Wars films (the three originals, three prequels, and *The Force Awakens*). They are ordered in terms of the film chronology, so Episode IV, *A New Hope* is the fourth element in the list. \n\nAs we said an ego graph is just a subgraph centered on a particular actor. So R2-D2's ego graph is just:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   library(igraph)\n   N <- neighbors(g, \"R2-D2\")\n   r2 <- subgraph(g, c(\"R2-D2\", names(N))) #ego graph\n```\n:::\n\n\nAnd we can just plot it like we would any `igraph` object:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   V(r2)$color <- rep(2, vcount(r2)) #alters appear in blue\n   V(r2)$color[which(V(r2)$name == \"R2-D2\")] <- 1 #ego appears in tan  \n   plot(r2, \n     vertex.size=10, vertex.frame.color=\"lightgray\", \n     vertex.label.dist=2, \n     layout = layout_as_star(r2, center = \"R2-D2\"),\n     vertex.label.cex = 1.25, edge.color = \"lightgray\")\n```\n\n::: {.cell-output-display}\n![R2-D2's Ego Network.](ego_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\nNote that we use the `layout_as_star()` for the layout, so that the ego is put in the center of the star graph surrounded by their alters, we can specify who the star node is using the option `center`.\n\nR2-D2's clustering coefficient is just the density of the graph that includes only the alters:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   alters <- r2 - vertex(\"R2-D2\")\n   C <- round(edge_density(alters), 2)\n   C\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.67\n```\n:::\n:::\n\n\nThe clustering coefficient $C_i$ for an ego $i$ ranges from zero to one. $C = 0$ means that *none* of ego's alters are connected to one another and $C = 1$ means that *all* of ego's alters are connected to one another. In this case, $C = 0.67$ means that 67% of R2-D2's alters are connected (e.g., co-appear in scenes) to one another. \n\nTypically we would want to compute the clustering coefficient of every node in a graph. This can be done using our trusty `lapply` and `sapply` meta-functions. \n\nWe proceed in three steps:\n\nFirst, we turn the code we used to find R2-D2's ego graph into a function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   create.ego <- function(x, w) {\n      alter.net <- subgraph(w, neighbors(w, x))\n      return(alter.net)\n      }\n```\n:::\n\n\nThen we `lapply` the function to each node in the network:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   ego.graphs <- lapply(V(g)$name, create.ego, w = g)\n   head(ego.graphs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\nIGRAPH 810ef73 UNW- 9 24 -- Episode IV – A New Hope\n+ attr: name (g/c), name (v/c), height (v/n), mass (v/n), hair_color\n| (v/c), skin_color (v/c), eye_color (v/c), birth_year (v/n), sex\n| (v/c), homeworld (v/c), species (v/c), weight (e/n)\n+ edges from 810ef73 (vertex names):\n [1] CHEWBACCA--C-3PO   CHEWBACCA--LUKE    C-3PO    --LUKE    C-3PO    --BIGGS  \n [5] LUKE     --BIGGS   CHEWBACCA--LEIA    C-3PO    --LEIA    LUKE     --LEIA   \n [9] BIGGS    --LEIA    C-3PO    --BERU    LUKE     --BERU    LEIA     --BERU   \n[13] C-3PO    --OWEN    LUKE     --OWEN    BERU     --OWEN    CHEWBACCA--OBI-WAN\n[17] C-3PO    --OBI-WAN LUKE     --OBI-WAN LEIA     --OBI-WAN CHEWBACCA--HAN    \n[21] C-3PO    --HAN     LUKE     --HAN     LEIA     --HAN     OBI-WAN  --HAN    \n\n[[2]]\nIGRAPH 810f581 UNW- 6 15 -- Episode IV – A New Hope\n+ attr: name (g/c), name (v/c), height (v/n), mass (v/n), hair_color\n| (v/c), skin_color (v/c), eye_color (v/c), birth_year (v/n), sex\n| (v/c), homeworld (v/c), species (v/c), weight (e/n)\n+ edges from 810f581 (vertex names):\n [1] R2-D2  --C-3PO   R2-D2  --LUKE    C-3PO  --LUKE    R2-D2  --LEIA   \n [5] C-3PO  --LEIA    LUKE   --LEIA    R2-D2  --OBI-WAN C-3PO  --OBI-WAN\n [9] LUKE   --OBI-WAN LEIA   --OBI-WAN R2-D2  --HAN     C-3PO  --HAN    \n[13] LUKE   --HAN     LEIA   --HAN     OBI-WAN--HAN    \n\n[[3]]\nIGRAPH 810f684 UNW- 10 27 -- Episode IV – A New Hope\n+ attr: name (g/c), name (v/c), height (v/n), mass (v/n), hair_color\n| (v/c), skin_color (v/c), eye_color (v/c), birth_year (v/n), sex\n| (v/c), homeworld (v/c), species (v/c), weight (e/n)\n+ edges from 810f684 (vertex names):\n [1] R2-D2    --CHEWBACCA R2-D2    --LUKE      CHEWBACCA--LUKE     \n [4] R2-D2    --BIGGS     LUKE     --BIGGS     R2-D2    --LEIA     \n [7] CHEWBACCA--LEIA      LUKE     --LEIA      BIGGS    --LEIA     \n[10] R2-D2    --BERU      LUKE     --BERU      LEIA     --BERU     \n[13] R2-D2    --OWEN      LUKE     --OWEN      BERU     --OWEN     \n[16] R2-D2    --OBI-WAN   CHEWBACCA--OBI-WAN   LUKE     --OBI-WAN  \n+ ... omitted several edges\n\n[[4]]\nIGRAPH 810f78c UNW- 15 36 -- Episode IV – A New Hope\n+ attr: name (g/c), name (v/c), height (v/n), mass (v/n), hair_color\n| (v/c), skin_color (v/c), eye_color (v/c), birth_year (v/n), sex\n| (v/c), homeworld (v/c), species (v/c), weight (e/n)\n+ edges from 810f78c (vertex names):\n [1] R2-D2    --CHEWBACCA R2-D2    --C-3PO     R2-D2    --BERU     \n [4] R2-D2    --OWEN      R2-D2    --OBI-WAN   R2-D2    --LEIA     \n [7] R2-D2    --BIGGS     R2-D2    --HAN       CHEWBACCA--OBI-WAN  \n[10] CHEWBACCA--C-3PO     CHEWBACCA--HAN       CHEWBACCA--LEIA     \n[13] CAMIE    --BIGGS     BERU     --OWEN      C-3PO    --BERU     \n[16] C-3PO    --OWEN      C-3PO    --LEIA      LEIA     --BERU     \n+ ... omitted several edges\n\n[[5]]\nIGRAPH 810f882 UNW- 4 4 -- Episode IV – A New Hope\n+ attr: name (g/c), name (v/c), height (v/n), mass (v/n), hair_color\n| (v/c), skin_color (v/c), eye_color (v/c), birth_year (v/n), sex\n| (v/c), homeworld (v/c), species (v/c), weight (e/n)\n+ edges from 810f882 (vertex names):\n[1] LEIA --OBI-WAN LEIA --MOTTI   LEIA --TARKIN  MOTTI--TARKIN \n\n[[6]]\nIGRAPH 810f975 UNW- 2 1 -- Episode IV – A New Hope\n+ attr: name (g/c), name (v/c), height (v/n), mass (v/n), hair_color\n| (v/c), skin_color (v/c), eye_color (v/c), birth_year (v/n), sex\n| (v/c), homeworld (v/c), species (v/c), weight (e/n)\n+ edge from 810f975 (vertex names):\n[1] LUKE--BIGGS\n```\n:::\n:::\n\n\nThe result is a `list` object with $|V| = 21$ ego subgraphs composed of each node's alters and their connections. \n\nFinally, to find out the clustering coefficient of each node, we just `sapply` the `igraph` function `edge_density` to each member of the `ego.graphs` list:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   C <- sapply(ego.graphs, edge_density)\n   names(C) <- V(g)$name\n   round(C, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n       0.67        1.00        0.60        0.34        0.67        1.00 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n       0.54        0.42        0.90        1.00        0.76        1.00 \n     TARKIN         HAN      GREEDO       JABBA     DODONNA GOLD LEADER \n       1.00        0.54         NaN         NaN        1.00        0.80 \n      WEDGE  RED LEADER     RED TEN \n       0.80        0.57        1.00 \n```\n:::\n:::\n\n\nNote we have a couple of `NaN` values in the slots corresponding to Greedo and Jabba in the clustering coefficient vector. \n\nLet's check out why:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   degree(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n          9           6          10          15           4           2 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n          8          12           5           4           7           3 \n     TARKIN         HAN      GREEDO       JABBA     DODONNA GOLD LEADER \n          3           8           1           1           3           5 \n      WEDGE  RED LEADER     RED TEN \n          5           7           2 \n```\n:::\n:::\n\n\nHere we see the problem is that both Greedo and Jabba are singleton nodes (with degree equal to one), so it doesn't make sense to analyze their clustering coefficients because their ego graph is just an isolated node!\n\nWe can just drop them and re-analyze:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   g <- subgraph(g, degree(g)> 1)\n   ego.graphs <- lapply(V(g)$name, create.ego, w = g)\n   C <- sapply(ego.graphs, edge_density)\n   names(C) <- V(g)$name\n   round(C, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n       0.67        1.00        0.60        0.34        0.67        1.00 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n       0.54        0.42        0.90        1.00        0.76        1.00 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n       1.00        1.00        1.00        0.80        0.80        0.57 \n    RED TEN \n       1.00 \n```\n:::\n:::\n\n\nMuch better!\n\nNote that in this analysis, Luke has the lowest clustering coefficient ($C = 0.34$) this usually indicates an ego whose alters are partitioned into distinct clusters (and hence they are not connected to one another), and ego is a mediator or *broker* between those clusters.\n\nLet's see what that looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   set.seed(456)\n   N <- neighbors(g, \"LUKE\")\n   luke.alters <- subgraph(g, N)  \n   V(luke.alters)$color <- cluster_leading_eigen(luke.alters)$membership\n   luke <- subgraph(g, c(\"LUKE\", names(N)))\n   luke <- simplify(union(luke, luke.alters))\n   V(luke)$color[which(is.na(V(luke)$color))] <- \"red\"\n   plot(luke, \n     vertex.size=6, vertex.frame.color=\"lightgray\", \n     vertex.label.dist=1.25,  \n     vertex.label.cex = 0.75, edge.color = \"lightgray\")\n```\n\n::: {.cell-output-display}\n![Luke's ego network with alter nodes colored by community assingment via Newman's leading eigenvector method.](ego_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\n\nHere we can see that Luke mediates between the Rebel Pilot community on the left and the Obi-Wan, Leia, Chewbacca, Han Solo and Droid communities on the right. Note that we didn't have to use that `layout_as_star` option because when ego's network has community structure, the traditional spring embedding layout will put ego at the center.\n\nNote that in the ego graph that includes ego, each connected alter is a **triangle** in the ego graph. So the clustering coefficient is simply a count of the *number of undirected triangles that are centered on ego*, or the number of *cycles of length three centered on ego*. \n\nSo that means that the diagonals of the cube of the adjacency matrix also contain the information needed to compute the clustering coefficient:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   A <- as.matrix(as_adjacency_matrix(g))\n   A3 <- A %*% A %*% A\n   diag(A3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n         48          30          54          72           8           2 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n         30          56          18          12          32           6 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n          6          30           6          16          16          24 \n    RED TEN \n          2 \n```\n:::\n:::\n\n\nSo all we need to do is divide these numbers by the maximum possible number of undirected triangles that could be centered on a node, which is $k_i(k_i - 1)$ where $k_i$ is ego's degree:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   k <- degree(g)\n   C <- diag(A3)/(k*(k - 1))\n   round(C, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n       0.67        1.00        0.60        0.34        0.67        1.00 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n       0.54        0.42        0.90        1.00        0.76        1.00 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n       1.00        1.00        1.00        0.80        0.80        0.57 \n    RED TEN \n       1.00 \n```\n:::\n:::\n\n\nWhich gives us the answer as before!\n\nFinally, from each ego's clustering coefficient (sometimes called the **local clustering coefficient** of each node) we can compute the graph's **global clustering coefficient** which is just the average this quantity across each node in the graph:\n\n$$\nC(G) = \\frac{1}{N}\\sum_iC_i\n$$\n\nIn `R`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   C.glob <- mean(C)\n   round(C.glob, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.79\n```\n:::\n:::\n\n\nWhich indicates a fairly clustered graph. \n\nIn `igraph` we can use the function `transitivity` to compute the local and global clustering coefficients, which can be specified using the argument `type`. For the local version, the function also expects a list of vertices:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(transitivity(g, V(g)$name, type = \"local\"), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n       0.67        1.00        0.60        0.34        0.67        1.00 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n       0.54        0.42        0.90        1.00        0.76        1.00 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n       1.00        1.00        1.00        0.80        0.80        0.57 \n    RED TEN \n       1.00 \n```\n:::\n:::\n\n\nAnd the graph's global clustering coefficient is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(transitivity(g, type = \"average\"), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.79\n```\n:::\n:::\n\n\n## Effective Size\nAnother structural measure at the ego-network level, closely related to the clustering coefficient, is the **effective size** [@burt92]. \n\nThe basic idea here is that if you have two alters in your network who are themselves connected to one another then they are *redundant*, that is the information you get from one can be substituted for the information you can get from the other (because you can always find the information of one via the other). \n\nThis means that instead of counting them as two alters, we should (dis)count them as one (or if you were engineering your ego network to optimize effective size, you would drop one and keep the other). \n\nFor an ego, the effective size $ES$ is then given by:\n\n$$\nES_i = k_i - \\bar{k}_{j \\in N(i)}\n$$\n\nWhere $k_i$ is the ego network size (ego's degree) and $\\bar{k}_{j \\in N(i)}$ is the **average degree** of the subgraph formed by ego's alters (excluding ego). \n\nSo to calculate $ES$ in our network all we have to do is calculate the average degree of each ego graph and the subtract that from ego's degree. We can obtain the average degree of each ego using the first two `lapply` and `sapply` lines in the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   mk <- lapply(ego.graphs, degree) #degree sequence of each ego\n   mk <- sapply(mk, mean) \n   names(mk) <- V(g)$name\n   round(mk, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n       5.33        5.00        5.40        4.80        2.00        1.00 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n       3.75        4.67        3.60        3.00        4.57        2.00 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n       2.00        5.00        2.00        3.20        3.20        3.43 \n    RED TEN \n       1.00 \n```\n:::\n:::\n\n\nWe can then compute ES as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   ES <- degree(g) - mk\n   round(ES, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n        3.7         1.0         4.6        10.2         2.0         1.0 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n        4.2         7.3         1.4         1.0         2.4         1.0 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n        1.0         1.0         1.0         1.8         1.8         3.6 \n    RED TEN \n        1.0 \n```\n:::\n:::\n\n\nNote that for nodes with the maximum clustering coefficient ($C_i = 1$) (like Han) the $ES$ measure reaches its minimum value of 1.0. The reason for this is that if the alter-to-alter network for an ego is a **complete graph**, then the average degree of that graph will necessarily be equal to the number of nodes in the alter-to-alter graph (ego's degree) minus one. \n\nGenerally, $ES$ will be smaller than ego's degree, except in the case where ego is at the center of a star graph with $C_i = 0$ (none of their contacts are connected to one another), in which case $ES$ will be equal to ego's degree (the effective size will be equal to the actual size).\n\nNote that if two nodes have the same degree, but different clustering coefficients, then the effective size of their networks will be different, with the node with the *larger* clustering coefficient having a *smaller* effective size.\n\nHere's an example from *A New Hope*:\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![k = 7, C = 0.76, ES = 2.4](ego_files/figure-html/unnamed-chunk-18-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![k = 7, C = 0.57, ES = 3.6](ego_files/figure-html/unnamed-chunk-18-2.png){width=768}\n:::\n\nTwo Ego Networks of the Same Size but Different Effective Size\n:::\n\n\nHere we can see that even though both Obi-Wan and Red Leader have an ego network of the same size ($k = 7$), a larger proportion of Obi-Wan's contacts ($C = 0.76$) are connected to one another that Red Leader's ($C = 0.57$), which means that Obi-Wan's effective size ($ES = 2.4$) ends up being smaller than Red Leader's ($ES = 3.6$). \n\n### Ego-Network Betweenness\n\nAn alternative structural measure of ego's position in the ego network, also closely related to the clustering coefficient, is **ego network betweenness**. \nAs @everett_borgatti05 note, in an ego network betweenness is determined by the number of paths of length two that involve ego, that is, by the number of disconnected alters. \n\nTherefore, if $\\mathbf{A}$ is the adjacency matrix recording the links between the alters, then $\\mathbf{A}^2$ will contain the number of paths of length two between each pair of alters. Because we are only interested in the number of paths of length two between each pair of *disconnected* alters, we multiply (element-wise) this matrix by the adjacency matrix corresponding to the **graph complement** (a matrix with a one for every zero in the original adjacency matrix and a zero for each one). We then take the sum of the reciprocals of one of the triangles (excluding the main diagonal) of the resulting matrix to find the betweenness of ego. \n\nIn math:\n\n$$\nC_B(Ego) = \\sum_{i < j}\\left[\\mathbf{A}^2 \\bullet (\\mathbf{J} - \\mathbf{A})\\right]_{ij}^{-1}\n$$\n\nWhere $\\mathbf{J}$ is a matrix full of ones of the same dimensions as $\\mathbf{A}$ and $\\bullet$ indicates element-wise matrix multiplication.\n\nA simple function that does this looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   ego.bet <- function(x, n) {\n      N <- neighbors(x, n)\n      alter.net <- subgraph(x, c(n, names(N)))\n      A <- as.matrix(as_adjacency_matrix(alter.net))\n      A2 <- A %*% A\n      J <- matrix(1, nrow(A), ncol(A))\n      cb <- A2 * (J - A)\n      cb <- 1/cb\n      cb[is.infinite(cb)] <- 0\n      cb <- sum(cb[upper.tri(cb)])\n      return(cb)\n   }\n```\n:::\n\n\nLet's see how it works for Luke:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(ego.bet(g, \"LUKE\"), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 45.92\n```\n:::\n:::\n\n\nWhich says that Luke has pretty high ego-network betweenness.\n\nWe can, of course, compute it for everyone in the network like before:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(sapply(V(g)$name, ego.bet, x = g), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      R2-D2   CHEWBACCA       C-3PO        LUKE DARTH VADER       CAMIE \n       3.33        0.00        5.42       45.92        1.00        0.00 \n      BIGGS        LEIA        BERU        OWEN     OBI-WAN       MOTTI \n       5.58       25.83        0.25        0.00        2.50        0.00 \n     TARKIN         HAN     DODONNA GOLD LEADER       WEDGE  RED LEADER \n       0.00        0.00        0.00        0.67        0.67        3.83 \n    RED TEN \n       0.00 \n```\n:::\n:::\n\n\nWhich confirms our original impression of Luke as the highest ego-network betweenness character with Leia in second place.\n\nWhat does it mean to have an ego-network betweenness of zero? Well, this is only possible if your clustering coefficient is 1.0, that is, when all of your alters are directly connected to one another. This is evident in Chewbacca's ego network:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   N <- neighbors(g, \"CHEWBACCA\")\n   chew <- subgraph(g, c(\"CHEWBACCA\", names(N)))\n   V(chew)$color <- rep(2, vcount(chew))\n   V(chew)$color[which(V(chew)$name == \"CHEWBACCA\")] <- 1 \n   plot(chew, \n     vertex.size=10, vertex.frame.color=\"lightgray\", \n     vertex.label.dist=2, \n     layout = layout_as_star(chew, center = \"CHEWBACCA\"),\n     vertex.label.cex = 1.25, edge.color = \"lightgray\")\n```\n\n::: {.cell-output-display}\n![Chewbacca's Ego Network.](ego_files/figure-html/unnamed-chunk-22-1.png){width=768}\n:::\n:::\n\n\nWhich is a complete clique of size seven.\n\n## Compositional Measures\n### Ego Network Diversity\n\nIf we have information on the categorical vertex attributes of ego's alters we may be interested in how diverse are ego's choices across those attributes. \n\nThe most common measure is **Blau's Diversity Index** ($H$). For a categorical attribute with $m$ levels, this is given by:\n\n$$\nH = 1 - \\sum_{k=1}^m p_k^2\n$$\n\nWhere $p_k$ is the proportion of ego's alters that fall under category level $k$. \n\nThe $H$ measure ranges from a minimum of $H = 0$ (all of ego's alters belong to a single category) to a maximum of $H = 1- \\frac{1}{m}$ (all of ego's alters belong to a different category).\n\nWhen the Blau diversity index is normalized by its theoretical maximum, it is sometimes referred to as the **Index of Qualitative Variation** or $IQV$:\n\n$$\nIQV = \\frac{1 - \\sum_{k=1}^m p_k^2}{1-\\frac{1}{m}}\n$$\n\nThe main difference between $H$ and $IQV$ is that the latter has a maximum of $IQV = 1.0$ indicating the top diversity that can be observed for a categorical attribute with $m$ categories. \n\nLet's see how this would work. \n\nFirst, let's switch to the *Attack of the Clones* Star Wars graph:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   g <- starwars[[2]]\n   g <- subgraph(g, degree(g)> 1) #removing singletons\n```\n:::\n\n\nNow, we will pick the vertex attribute `homeworld` and try to measure how diverse is each character's ego network on this score. \n\nTo do that, we need to get the proportion of characters from each homeworld in the network. \n\nLet's check out this vertex attribute:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   V(g)$homeworld\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Naboo\"          \"Naboo\"          \"Naboo\"          NA              \n [5] NA               \"Haruun Kal\"     NA               \"Cerea\"         \n [9] \"Alderaan\"       \"Naboo\"          \"Stewjon\"        \"Tatooine\"      \n[13] \"Naboo\"          NA               NA               NA              \n[17] \"Kamino\"         \"Kamino\"         \"Kamino\"         \"Concord Dawn\"  \n[21] \"Tatooine\"       \"Tatooine\"       \"Tatooine\"       \"Tatooine\"      \n[25] \"Serenno\"        NA               \"Geonosis\"       \"Cato Neimoidia\"\n```\n:::\n:::\n\n\nThere are some `NA` values here, so let's create a residual category called \"other\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   V(g)$homeworld[is.na(V(g)$homeworld)] <- \"Other\"\n   V(g)$homeworld\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Naboo\"          \"Naboo\"          \"Naboo\"          \"Other\"         \n [5] \"Other\"          \"Haruun Kal\"     \"Other\"          \"Cerea\"         \n [9] \"Alderaan\"       \"Naboo\"          \"Stewjon\"        \"Tatooine\"      \n[13] \"Naboo\"          \"Other\"          \"Other\"          \"Other\"         \n[17] \"Kamino\"         \"Kamino\"         \"Kamino\"         \"Concord Dawn\"  \n[21] \"Tatooine\"       \"Tatooine\"       \"Tatooine\"       \"Tatooine\"      \n[25] \"Serenno\"        \"Other\"          \"Geonosis\"       \"Cato Neimoidia\"\n```\n:::\n:::\n\n\nGreat! Now we can use the native `R` function `table` to get the relevant proportions.\n\nThe function `table` gives us the count of characters in each category, and then we divide by the total number of actors in the network, given by `vcount`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   p.hw <- round(table(V(g)$homeworld)/vcount(g), 3)\n   p.hw\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n      Alderaan Cato Neimoidia          Cerea   Concord Dawn       Geonosis \n         0.036          0.036          0.036          0.036          0.036 \n    Haruun Kal         Kamino          Naboo          Other        Serenno \n         0.036          0.107          0.179          0.250          0.036 \n       Stewjon       Tatooine \n         0.036          0.179 \n```\n:::\n:::\n\n\nNow that we know how to get the proportions we need, we can write a custom function that will compute $H$ (or its normalized counterpart the $IQV$) for a given ego network for any given attribute:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   blau <- function(n, w, a, norm = FALSE) {\n      x <- subgraph(w, neighbors(w, n)) #ego subgraph\n      p <- table(vertex_attr(x, a))/vcount(x) #proportion of alters in each category of the attribute a\n      m <- length(p)\n      res <- 1 - sum(p^2) #blau diversity\n      if (norm == TRUE) {res <- res /(1 - 1/m)} #IQV\n      return(res)\n      }\n```\n:::\n\n\nThis function takes three inputs: The name of the ego `n`, the graph object `w`, and the name of the attribute `a`. It returns the Blau diversity index score for that ego on that attribute by default; when `norm` is set to `TRUE` it returns the normalized Blau score (a.k.a. the $IQV$). \n\nLet's see Padme's Home World ego network diversity score:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(blau(\"PADME\", g, \"homeworld\"), 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.796\n```\n:::\n:::\n\n\nWhich says that Padme has a fairly diverse ego network when it comes to Home World. \n\nWe can, of course, just use `sapply` to compute everyone's Home World ego network diversity score:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(sapply(V(g)$name, blau, w = g, a = \"homeworld\"), 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          R2-D2   CAPTAIN TYPHO         EMPEROR SENATOR ASK AAK    ORN FREE TAA \n          0.444           0.667           0.815           0.776           0.444 \n     MACE WINDU            YODA    KI-ADI-MUNDI     BAIL ORGANA         JAR JAR \n          0.820           0.840           0.750           0.776           0.780 \n        OBI-WAN          ANAKIN           PADME            SOLA           JOBAL \n          0.858           0.809           0.796           0.625           0.625 \n          RUWEE         TAUN WE         LAMA SU       BOBA FETT      JANGO FETT \n          0.625           0.625           0.500           0.667           0.625 \n          C-3PO            OWEN            BERU          CLIEGG     COUNT DOOKU \n          0.444           0.320           0.320           0.320           0.860 \n        SUN RIT          POGGLE     NUTE GUNRAY \n          0.833           0.833           0.833 \n```\n:::\n:::\n\n\nIn this network Count Dooku stands out as having a very diverse ego network by Home World, while Owen sports a very homogeneous ego network on the same attribute. \n\nLet's see a side-by-side comparison:\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](ego_files/figure-html/unnamed-chunk-30-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](ego_files/figure-html/unnamed-chunk-30-2.png){width=768}\n:::\n\nTwo Ego Networks with Nodes Colored by Homeworld\n:::\n\n\nAnd here are the corresponding $IQV$ scores for everyone in the network:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(sapply(V(g)$name, blau, w = g, \n                a = \"homeworld\", norm = TRUE), 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          R2-D2   CAPTAIN TYPHO         EMPEROR SENATOR ASK AAK    ORN FREE TAA \n          0.889           1.000           0.951           0.969           0.889 \n     MACE WINDU            YODA    KI-ADI-MUNDI     BAIL ORGANA         JAR JAR \n          0.957           0.960           1.000           0.969           0.936 \n        OBI-WAN          ANAKIN           PADME            SOLA           JOBAL \n          0.953           0.924           0.910           0.937           0.937 \n          RUWEE         TAUN WE         LAMA SU       BOBA FETT      JANGO FETT \n          0.937           0.937           1.000           1.000           0.937 \n          C-3PO            OWEN            BERU          CLIEGG     COUNT DOOKU \n          0.889           0.640           0.640           0.640           0.983 \n        SUN RIT          POGGLE     NUTE GUNRAY \n          1.000           1.000           1.000 \n```\n:::\n:::\n\n\nAs we noted an ego network with maximum diversity $IQV = 1.0$ is one where every alter is in a different category. Here are two examples:\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](ego_files/figure-html/unnamed-chunk-32-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](ego_files/figure-html/unnamed-chunk-32-2.png){width=768}\n:::\n\nTwo Ego Networks with Maximum Homeworld Diversity.\n:::\n\n\n#### Ego Network Homophily\n\nDiversity measures the extent to which ego's connect to alters who are the same or different from *one another*. We may also want to get a sense of how *homophilous* an ego network is, namely, the extent to which ego connects to alters that are the same or different from *them*.\n\nFor instance, a person can have an ego network composed of 100% alters who are different from them on a given attribute (maximum \"heterophily\") but those alters could be 100% homogeneous---e.g., all come from the same planet---and thus ego will have the *minimum* Blau diversity score ($H = 0$).  \n\nTo measure homophily in the ego network we use the **EI homophily index**. This is given by:\n\n$$\nEI = \\frac{E-I}{E+I}\n$$\n\nWhere $E$ is the number of \"external\" ties (alter different from ego on attribute), and $I$ is the number of \"internal\" ties (alter same as ego on attribute).\n\nThe $EI$ index ranges from a minimum of $EI = -1$, indicating maximum homophily, to a maximum of $EI = 1$, indicating maximum heterophily. An EI index value of zero indicates no preference for internal over external ties. \n\nSo let's write a function that does what we want to calculate EI:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   EI <- function(n, w, a) {\n      x <- subgraph(w, neighbors(w, n))\n      E <- sum(vertex_attr(w, a, n) != vertex_attr(x, a)) #n. external ties\n      I <- sum(vertex_attr(w, a, n) == vertex_attr(x, a))  #n. internal ties\n      res = (E - I)/(E + I) #EI Index\n      return(res)\n      }\n```\n:::\n\n\nLet's look at the attribute `sex`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   V(g)$sex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"none\"   \"male\"   \"male\"   NA       NA       \"male\"   \"male\"   \"male\"  \n [9] \"male\"   \"male\"   \"male\"   \"male\"   \"female\" NA       NA       NA      \n[17] \"female\" \"male\"   \"male\"   \"male\"   \"none\"   \"male\"   \"female\" \"male\"  \n[25] \"male\"   NA       \"male\"   \"male\"  \n```\n:::\n:::\n\n\nGetting rid of the `NA` values:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   V(g)$sex[is.na(V(g)$sex)] <- \"Other\"\n   V(g)$sex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"none\"   \"male\"   \"male\"   \"Other\"  \"Other\"  \"male\"   \"male\"   \"male\"  \n [9] \"male\"   \"male\"   \"male\"   \"male\"   \"female\" \"Other\"  \"Other\"  \"Other\" \n[17] \"female\" \"male\"   \"male\"   \"male\"   \"none\"   \"male\"   \"female\" \"male\"  \n[25] \"male\"   \"Other\"  \"male\"   \"male\"  \n```\n:::\n:::\n\n\nAnd calculating the homophily index on gender for everyone:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   EI <- sapply(V(g)$name, EI, w = g, a = \"sex\")\n   round(EI, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          R2-D2   CAPTAIN TYPHO         EMPEROR SENATOR ASK AAK    ORN FREE TAA \n           0.33           -1.00           -0.56            0.71            0.33 \n     MACE WINDU            YODA    KI-ADI-MUNDI     BAIL ORGANA         JAR JAR \n          -0.60           -0.60           -1.00           -0.71           -0.40 \n        OBI-WAN          ANAKIN           PADME            SOLA           JOBAL \n          -0.53           -0.11            0.88            0.00            0.00 \n          RUWEE         TAUN WE         LAMA SU       BOBA FETT      JANGO FETT \n           0.00            1.00            0.00           -0.33           -0.50 \n          C-3PO            OWEN            BERU          CLIEGG     COUNT DOOKU \n           0.67            0.20            0.60            0.20           -0.60 \n        SUN RIT          POGGLE     NUTE GUNRAY \n           1.00           -0.33           -0.33 \n```\n:::\n:::\n\n\nAs we can see, the Emperor, Mace Windu, Obi-Wan and other such characters have a homophilous \"bro\" network. Padme, on the other hand, has a heterophilous network with respect to gender. \n\nLet's see a side-by-side comparison:\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![H = -0.60](ego_files/figure-html/unnamed-chunk-37-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![H =  0.88](ego_files/figure-html/unnamed-chunk-37-2.png){width=768}\n:::\n\nTwo Ego Networks with Nodes Colored by Gender\n:::\n\n\nAs we can see, Mace Windu is mostly surrounded by other men (like him) but Padme's network includes only one other woman, and the rest are composed of people with a different gender presentation than her (or have no discernible gender like the droids).\n\nLike the clustering coefficient, we can compute a graph level index of homophily on a given attribute. This is given by the average EI index of nodes in the graph for that attribute.\n\nIn the case of gender in *Attack of the Clones*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   EI.gender = mean(EI)\n   round(EI.gender, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.06\n```\n:::\n:::\n\n\nWhich shows a slight preference for same-gender ties in the network. \n\n\n#### Normalized EI\n\nSometimes we may want to take into account that the group sizes of different categories of people is unequal in the network. For instance, Star Wars is full characters gendered as men, which means that any homophily index will penalize men as being more homophilous simply because there are more men around to form ties with.\n\n@everett_borgatti12 [p.564-565] propose approach to normalizing the EI index to account for unequal group sizes, yielding the $NEI$. So instead of computing EI they suggest calculating:\n\n$$\nE^* = \\frac{E}{N-Ns}\n$$\n\n$$\nI^* = \\frac{I}{Ns}\n$$\n\n$$\nNEI = \\frac{E^*-I^*}{E^*+I^*}\n$$\n\nWith $N_s$ being the number of \"similar\" nodes to ego in the whole graph (or external population) and $N$ being the total number of nodes (or persons in the population). As you can see, the $NEI$ weights both the number of external and $E$ the number of internal ties $I$ by their maximum possible values in the network. \n\nHere's a function that does that:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   NEI <- function(n, w, a) {\n      N <- vcount(w) \n      Ns <- sum(vertex_attr(w, a) == vertex_attr(w, a, n))\n      x <- subgraph(w, neighbors(w, n))\n      E <- sum(vertex_attr(w, a, n) != vertex_attr(x, a)) \n      I <- sum(vertex_attr(w, a, n) == vertex_attr(x, a)) \n      E <- E/(N - Ns) #normalized E\n      I <- I/Ns #normalized I\n      res = (E - I)/(E + I)\n      return(res)\n   }\n```\n:::\n\n\nLet's re-check Mace Windu's and Padme's EI index using the normalized version:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(NEI(\"MACE WINDU\", g, \"sex\"), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.44\n```\n:::\n\n```{.r .cell-code}\n   round(NEI(\"PADME\", g, \"sex\"), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.32\n```\n:::\n:::\n\n\nAs we can see the NEI scores are less extreme than the unnormalized ones, once we take into account that the majority of characters in the film are men.\n\nHere are the NEI scores with respect to gender for everyone:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   NEI <- sapply(V(g)$name, NEI, w = g, a = \"sex\")\n   round(NEI, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          R2-D2   CAPTAIN TYPHO         EMPEROR SENATOR ASK AAK    ORN FREE TAA \n          -0.73           -1.00           -0.39            0.24           -0.29 \n     MACE WINDU            YODA    KI-ADI-MUNDI     BAIL ORGANA         JAR JAR \n          -0.44           -0.44           -1.00           -0.59           -0.20 \n        OBI-WAN          ANAKIN           PADME            SOLA           JOBAL \n          -0.36            0.11            0.32           -0.57           -0.57 \n          RUWEE         TAUN WE         LAMA SU       BOBA FETT      JANGO FETT \n          -0.57            1.00            0.21           -0.13           -0.32 \n          C-3PO            OWEN            BERU          CLIEGG     COUNT DOOKU \n          -0.44            0.40           -0.35            0.40           -0.44 \n        SUN RIT          POGGLE     NUTE GUNRAY \n           1.00           -0.13           -0.13 \n```\n:::\n:::\n\n\nInterestingly, while most people's scores are attenuated towards zero in the normalized scale, R2-D2's becomes more extreme going from weakly positive (demonstrating \"gender\" heterophily) to extreme negative (showing same \"gender\" preference). \n\nLet's see what's going on:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![R2-D2's Ego Network with Nodes Colored by Gender](ego_files/figure-html/unnamed-chunk-42-1.png){width=480}\n:::\n:::\n\n\nHere we can see that the reason why R2-D2 ends up being high in homophily in the NEI despite containing a network with just three nodes and only a single \"same-gender\" (i.e., none) tie, is that he is connected to C3PO who is the only other character (a droid) whose gender is also assigned to \"none.\"\n\nAnd here's the graph's overall NEI:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   NEI.gender = mean(NEI)\n   round(NEI.gender, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.19\n```\n:::\n:::\n\n\nWhich shows that our previous unnormalized average under-estimated homophily in this network. Instead, there is a moderately strong tendency for characters to co-appear with others of the same gender classification once the imbalance favoring men is accounted for. \n\n### Other Ways of Accounting for Imbalanced Group Sizes in Homophily Metrics\n\nAs may already be evident, when constructing a homophily measure that takes into account the population (or local network) proportions of various types of alters, there are four pieces of information that we have to take into account:\n\na) Number of alters linked to ego of the same category as ego.\nb) Number of alters linked to ego of a different category from ego.\nc) Number of alters not linked to ego of the same category as ego.\nd) Number of alters not linked to ego of a different category from ego.\n\nWhich yields a classic 2 by 2 table. \n\nHere's a function that produces such a table for each ego for a given attribute:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   abcd <- function(n, w, a) {\n      x <- subgraph(w, neighbors(w, n))\n      same <- vertex_attr(w, a, n) == vertex_attr(w, a)\n      same <- same[!(same %in% n)] #deleting ego node from vector\n      tied <- as.vector(V(w)$name) %in% names(neighbors(w, n))\n      tab <- table(tied, same)\n      tab <- tab[2:1, 2:1] #reversing row and column order of table\n      return(tab)\n   }\n```\n:::\n\n\nSo for Count Dooku with respect to gender, this 2 X 2 table looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   abcd(\"COUNT DOOKU\", g, \"sex\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       same\ntied    TRUE FALSE\n  TRUE     8     2\n  FALSE    9     9\n```\n:::\n:::\n\n\nSo here we can see that Dooku is linked to eight others of the same gender, but there are nine other men he's not linked to. In the same way, he has two different-gender ties, but there are nine others of a different gender he's not tied to. \n\nAs @everett_borgatti12 note, we can label the cells of the 2 X 2 EI table with the letters from the above list to highlight each piece of information in each cell: \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n       same\ntied    TRUE FALSE\n  TRUE  a    b    \n  FALSE c    d    \n```\n:::\n:::\n\n\nUsing this nomenclature, the EI index is given by:\n\n$$\nEI = \\frac{a-b}{a+b}\n$$\n\nIt is clear that the EI only uses information only from the first row (alters tied to ego) and is thus sensitive to group size imbalances because it ignores the other pieces of information ($c$ and $d$). \n\nThe NEI, on the other hand, using the same 2 X 2 table cell coding, is given by:\n\n$$\nNEI =  \\frac{\\left(\\frac{a}{a+c}\\right)-\\left(\\frac{b}{b+d}\\right)}{\\left(\\frac{a}{a+c}\\right)+\\left(\\frac{b}{b+d}\\right)}\n$$\n\nWhich makes clear that NEI uses information from all four cells therefore, it is insensitive to group size imbalances.\n\nOther measures of homophily could thus be constructed from the entries in the 2 X 2 table, that, like the NEI, are not sensitive to group sizes because they use all four pieces of information. \n\n#### The Point Biserial Correlation\n\nOne such measure @everett_borgatti12 [p. 565] recommend is the **point biserial correlation coefficient** ($r^{pb}$), which is given, using the cell labels in the table above, by:\n\n$$\nr^{pb} = \\frac{ad-bc}{\\sqrt{(a+c)(b+d)(a+b)(c+d))}}\n$$\n\nFrom the formula it is clear that $r^{pb}$ is positive whenever ego is connected to similar alters and disconnected from non-similar ones (the numbers in the main diagonals of the 2 X 2 table, $a$ and $d$, are big). In this way, the $r^{pb}$ works just like a correlation coefficient. A value 1.0 indicates maximum preference for same category alters, and a value closer to -1.0 indicates preference to connect with people different from ego. \n\nA function that computes $r^{pb}$ from the output of `abcd` above is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   pb.corr <- function(x) {\n      a <- x[1,1]\n      b <- x[1,2]\n      c <- x[2,1]\n      d <- x[2,2]\n   num <- (a*d - b*c)\n   den <- sqrt((a+c)*(b+d)*(a+b)*(c+d))\n   return(num/den)\n   }\n```\n:::\n\n\nFor Dooku, $r^{pb}$ is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(pb.corr(abcd(\"COUNT DOOKU\", g, \"sex\")), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.29\n```\n:::\n:::\n\n\nWhich shows a positive tendency for same gender ties, net of the imbalance between men and other-gendered characters in the film. \n\nTo calculate $r^{pb}$ for the whole network, first we need to create a list containing the corresponding 2 X 2 EI tables for each node for the gender attribute:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   abcd.gender <- lapply(V(g)$name, abcd, w = g, a = \"sex\")\n   names(abcd.gender) <- V(g)$name\n   head(abcd.gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`R2-D2`\n       same\ntied    TRUE FALSE\n  TRUE     1     2\n  FALSE    1    24\n\n$`CAPTAIN TYPHO`\n       same\ntied    TRUE FALSE\n  TRUE     3     0\n  FALSE   14    11\n\n$EMPEROR\n       same\ntied    TRUE FALSE\n  TRUE     7     2\n  FALSE   10     9\n\n$`SENATOR ASK AAK`\n       same\ntied    TRUE FALSE\n  TRUE     1     6\n  FALSE    5    16\n\n$`ORN FREE TAA`\n       same\ntied    TRUE FALSE\n  TRUE     1     2\n  FALSE    5    20\n\n$`MACE WINDU`\n       same\ntied    TRUE FALSE\n  TRUE     8     2\n  FALSE    9     9\n```\n:::\n:::\n\n\nAnd then `sapply` the function `pb.corr` to each element of this list:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   PBC <- sapply(abcd.gender, pb.corr)\n   round(PBC, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          R2-D2   CAPTAIN TYPHO         EMPEROR SENATOR ASK AAK    ORN FREE TAA \n           0.35            0.28            0.24           -0.10            0.10 \n     MACE WINDU            YODA    KI-ADI-MUNDI     BAIL ORGANA         JAR JAR \n           0.29            0.29            0.33            0.30            0.14 \n        OBI-WAN          ANAKIN           PADME            SOLA           JOBAL \n           0.40           -0.14           -0.19            0.28            0.28 \n          RUWEE         TAUN WE         LAMA SU       BOBA FETT      JANGO FETT \n           0.28           -0.14           -0.06            0.04            0.12 \n          C-3PO            OWEN            BERU          CLIEGG     COUNT DOOKU \n           0.19           -0.20            0.14           -0.20            0.29 \n        SUN RIT          POGGLE     NUTE GUNRAY \n          -0.27            0.06            0.06 \n```\n:::\n:::\n\n\nWhich shows that, after accounting for group sizes, most characters display slight to moderate preferences for same-gender ties, with the exception of Anakin, Padme, Taun We, Owen, Clegg, and Sun Rit. \n\nIf we wanted to see what proportion of nodes have a same-gender preference we just type:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(sum(PBC > 0)/length(PBC), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.71\n```\n:::\n:::\n\n\nWhich suggest that about 70% of the characters display a tendency to appear with same gender others (accounting for differences in the sizes of different gender groups).\n\n\nAnd at the network level, the point-biserial correlation homophily measure for gender is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(mean(PBC), 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1139\n```\n:::\n:::\n\n\nWhich also suggests a slight preference for same gender ties in this network.\n\n#### Yule's Q\n\nThe point biserial correlation is a good measure of homiphily but comes at the expense of the simplicity of the EI index. If you favor a simpler approach that also makes us of all of the information in the 2 X 2 table, Yule's $Q$ is a good option [@borgatti_etal24, p. 159]:\n\n$$\nQ = \\frac{ad-bc}{ad+bc}\n$$\n\nLike $r^{pb}$, $Q$ works like a correlation coefficient. It is at is maximum value of $Q = 1$ when ego has no connections to different-category others ($b=0$)---maximum homophily---and it is at a minimum of $Q = -1$ when ego has no connections to same-category others ($a=0$)---maximum heterophily. \n\nA function to calculate $Q$ from the `abcd` function output is as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   y.Q <- function(x) {\n      a <- x[1,1]\n      b <- x[1,2]\n      c <- x[2,1]\n      d <- x[2,2]\n   num <- a*d - b*c\n   den <- a*d + b*c\n   return(num/den)    \n   }\n```\n:::\n\n\nAnd here are the values for the *Attack of the Clones* network:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   Q <- sapply(abcd.gender, y.Q)\n   round(Q, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          R2-D2   CAPTAIN TYPHO         EMPEROR SENATOR ASK AAK    ORN FREE TAA \n           0.85            1.00            0.52           -0.30            0.33 \n     MACE WINDU            YODA    KI-ADI-MUNDI     BAIL ORGANA         JAR JAR \n           0.60            0.60            1.00            0.69            0.30 \n        OBI-WAN          ANAKIN           PADME            SOLA           JOBAL \n           0.70           -0.30           -0.56            0.67            0.67 \n          RUWEE         TAUN WE         LAMA SU       BOBA FETT      JANGO FETT \n           0.67           -1.00           -0.23            0.14            0.36 \n          C-3PO            OWEN            BERU          CLIEGG     COUNT DOOKU \n           0.62           -0.48            0.45           -0.48            0.60 \n        SUN RIT          POGGLE     NUTE GUNRAY \n          -1.00            0.16            0.16 \n```\n:::\n:::\n\n\nLet's compare four egos with extreme values on $Q$:\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Q = 1](ego_files/figure-html/unnamed-chunk-55-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![Q = -1](ego_files/figure-html/unnamed-chunk-55-2.png){width=768}\n:::\n\n::: {.cell-output-display}\n![Q = -1](ego_files/figure-html/unnamed-chunk-55-3.png){width=768}\n:::\n\n::: {.cell-output-display}\n![Q = 1](ego_files/figure-html/unnamed-chunk-55-4.png){width=768}\n:::\n\nTwo Ego Networks with Maximum and Minimum Q Values\n:::\n\n\nAs we can see, Ki-Adi-Mundi and Captain Typhoo have an ego network that combine maximum homophily and homogeneity with respect to gender (both ego networks are composed of all men)--and therefore both receive the minimum score of $Q=-1$.\n\nTaun We, on the other hand, has an ego network that combines maximum heterophily with maximum homogeneity of alters with respect to the same attribute (she has an all-men ego network), thus receiving the maximum $Q=-1$. Sun Rit has some heterogeneity in their ego network, but because all alters are of a different gender category from them, they also receive a minimum score of $Q=-1$. \n\nThe average value of $Q$ for the whole network is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   round(mean(Q), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.24\n```\n:::\n:::\n\n\nWhich also suggests a slight same-gender preference in the network after accounting for imbalanced group sizes. \n\n\n\n\n",
    "supporting": [
      "ego_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}